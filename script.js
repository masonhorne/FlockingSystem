(()=>{"use strict";var t=1e-6,e="undefined"!=typeof Float32Array?Float32Array:Array;function i(){var t=new e(3);return e!=Float32Array&&(t[0]=0,t[1]=0,t[2]=0),t}function s(t){var i=new e(3);return i[0]=t[0],i[1]=t[1],i[2]=t[2],i}function r(t){var e=t[0],i=t[1],s=t[2];return Math.hypot(e,i,s)}function n(t,i,s){var r=new e(3);return r[0]=t,r[1]=i,r[2]=s,r}function a(t,e,i){return t[0]=e[0]+i[0],t[1]=e[1]+i[1],t[2]=e[2]+i[2],t}function o(t,e,i){return t[0]=e[0]-i[0],t[1]=e[1]-i[1],t[2]=e[2]-i[2],t}function h(t,e,i){return t[0]=Math.max(e[0],i[0]),t[1]=Math.max(e[1],i[1]),t[2]=Math.max(e[2],i[2]),t}function c(t,e,i){return t[0]=e[0]*i,t[1]=e[1]*i,t[2]=e[2]*i,t}function l(t,e){return t[0]=-e[0],t[1]=-e[1],t[2]=-e[2],t}function u(t,e){var i=e[0],s=e[1],r=e[2],n=i*i+s*s+r*r;return n>0&&(n=1/Math.sqrt(n)),t[0]=e[0]*n,t[1]=e[1]*n,t[2]=e[2]*n,t}function g(t,e,i){var s=e[0],r=e[1],n=e[2],a=i[0],o=i[1],h=i[2];return t[0]=r*h-n*o,t[1]=n*a-s*h,t[2]=s*o-r*a,t}function m(t,e,i){var s=e[0],r=e[1],n=e[2],a=i[3]*s+i[7]*r+i[11]*n+i[15];return a=a||1,t[0]=(i[0]*s+i[4]*r+i[8]*n+i[12])/a,t[1]=(i[1]*s+i[5]*r+i[9]*n+i[13])/a,t[2]=(i[2]*s+i[6]*r+i[10]*n+i[14])/a,t}Math.random,Math.PI,Math.hypot||(Math.hypot=function(){for(var t=0,e=arguments.length;e--;)t+=arguments[e]*arguments[e];return Math.sqrt(t)});var d=o;function f(){var t=new e(16);return e!=Float32Array&&(t[1]=0,t[2]=0,t[3]=0,t[4]=0,t[6]=0,t[7]=0,t[8]=0,t[9]=0,t[11]=0,t[12]=0,t[13]=0,t[14]=0),t[0]=1,t[5]=1,t[10]=1,t[15]=1,t}function p(t,e,i){var s=e[0],r=e[1],n=e[2],a=e[3],o=e[4],h=e[5],c=e[6],l=e[7],u=e[8],g=e[9],m=e[10],d=e[11],f=e[12],p=e[13],v=e[14],x=e[15],M=i[0],b=i[1],S=i[2],A=i[3];return t[0]=M*s+b*o+S*u+A*f,t[1]=M*r+b*h+S*g+A*p,t[2]=M*n+b*c+S*m+A*v,t[3]=M*a+b*l+S*d+A*x,M=i[4],b=i[5],S=i[6],A=i[7],t[4]=M*s+b*o+S*u+A*f,t[5]=M*r+b*h+S*g+A*p,t[6]=M*n+b*c+S*m+A*v,t[7]=M*a+b*l+S*d+A*x,M=i[8],b=i[9],S=i[10],A=i[11],t[8]=M*s+b*o+S*u+A*f,t[9]=M*r+b*h+S*g+A*p,t[10]=M*n+b*c+S*m+A*v,t[11]=M*a+b*l+S*d+A*x,M=i[12],b=i[13],S=i[14],A=i[15],t[12]=M*s+b*o+S*u+A*f,t[13]=M*r+b*h+S*g+A*p,t[14]=M*n+b*c+S*m+A*v,t[15]=M*a+b*l+S*d+A*x,t}function v(t,e){return t[0]=1,t[1]=0,t[2]=0,t[3]=0,t[4]=0,t[5]=1,t[6]=0,t[7]=0,t[8]=0,t[9]=0,t[10]=1,t[11]=0,t[12]=e[0],t[13]=e[1],t[14]=e[2],t[15]=1,t}function x(e,i,s){var r,n,a,o=s[0],h=s[1],c=s[2],l=Math.hypot(o,h,c);return l<t?null:(o*=l=1/l,h*=l,c*=l,r=Math.sin(i),a=1-(n=Math.cos(i)),e[0]=o*o*a+n,e[1]=h*o*a+c*r,e[2]=c*o*a-h*r,e[3]=0,e[4]=o*h*a-c*r,e[5]=h*h*a+n,e[6]=c*h*a+o*r,e[7]=0,e[8]=o*c*a+h*r,e[9]=h*c*a-o*r,e[10]=c*c*a+n,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,e)}i();function M(e,i,s,r){var n,a,o,h,c,l,u,g,m,d,f=i[0],p=i[1],v=i[2],x=r[0],M=r[1],b=r[2],S=s[0],A=s[1],y=s[2];return Math.abs(f-S)<t&&Math.abs(p-A)<t&&Math.abs(v-y)<t?function(t){return t[0]=1,t[1]=0,t[2]=0,t[3]=0,t[4]=0,t[5]=1,t[6]=0,t[7]=0,t[8]=0,t[9]=0,t[10]=1,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,t}(e):(u=f-S,g=p-A,m=v-y,n=M*(m*=d=1/Math.hypot(u,g,m))-b*(g*=d),a=b*(u*=d)-x*m,o=x*g-M*u,(d=Math.hypot(n,a,o))?(n*=d=1/d,a*=d,o*=d):(n=0,a=0,o=0),h=g*o-m*a,c=m*n-u*o,l=u*a-g*n,(d=Math.hypot(h,c,l))?(h*=d=1/d,c*=d,l*=d):(h=0,c=0,l=0),e[0]=n,e[1]=h,e[2]=u,e[3]=0,e[4]=a,e[5]=c,e[6]=g,e[7]=0,e[8]=o,e[9]=l,e[10]=m,e[11]=0,e[12]=-(n*f+a*p+o*v),e[13]=-(h*f+c*p+l*v),e[14]=-(u*f+g*p+m*v),e[15]=1,e)}class b{constructor(t,e,i,s,r,n,a){this.position=t,this.target=e,this.up=i,this.viewMatrix=f(),this.projectionMatrix=f(),this.speed=1,this.tiltSpeed=5,M(this.viewMatrix,this.position,this.target,this.up),function(t,e,i,s,r){var n,a=1/Math.tan(e/2);t[0]=a/i,t[1]=0,t[2]=0,t[3]=0,t[4]=0,t[5]=a,t[6]=0,t[7]=0,t[8]=0,t[9]=0,t[11]=-1,t[12]=0,t[13]=0,t[15]=0,null!=r&&r!==1/0?(n=1/(s-r),t[10]=(r+s)*n,t[14]=2*r*s*n):(t[10]=-1,t[14]=-2*s)}(this.projectionMatrix,s,r,n,a)}getViewMatrix(){return this.viewMatrix}getProjectionMatrix(){return this.projectionMatrix}getPosition(){return this.position}moveForward(){const t=i();d(t,this.target,this.position);const e=u(t,t);a(this.target,s(this.target),c(t,e,this.speed)),a(this.position,s(this.position),c(t,e,this.speed)),this.updateViewMatrix()}moveBackward(){const t=i();d(t,this.target,this.position);const e=u(t,t);d(this.target,s(this.target),c(t,e,this.speed)),d(this.position,s(this.position),c(t,e,this.speed)),this.updateViewMatrix()}moveUp(){const t=i();c(t,this.up,this.speed),a(this.position,this.position,t),a(this.target,this.target,t),this.updateViewMatrix()}moveDown(){const t=i();c(t,this.up,this.speed),d(this.position,this.position,t),d(this.target,this.target,t),this.updateViewMatrix()}moveLeft(){const t=i();d(t,this.target,this.position);const e=u(t,t),r=u(i(),g(t,e,this.up));a(this.target,s(this.target),c(t,r,-this.speed)),a(this.position,s(this.position),c(t,r,-this.speed)),this.updateViewMatrix()}moveRight(){const t=i();d(t,this.target,this.position);const e=u(t,t),r=u(i(),g(t,e,this.up));a(this.target,s(this.target),c(t,r,this.speed)),a(this.position,s(this.position),c(t,r,this.speed)),this.updateViewMatrix()}tiltUp(){const t=i();d(t,this.target,this.position),u(t,t);const e=i();g(e,t,this.up),u(e,e);const s=f();x(s,this.tiltSpeed*Math.PI/180,e),m(t,t,s),a(this.target,this.position,t),this.updateViewMatrix()}tiltDown(){const t=i();d(t,this.target,this.position),u(t,t);const e=i();g(e,t,this.up),u(e,e);const s=f();x(s,-this.tiltSpeed*Math.PI/180,e),m(t,t,s),a(this.target,this.position,t),this.updateViewMatrix()}tiltLeft(){const t=i();d(t,this.target,this.position),u(t,t);const e=f();x(e,this.tiltSpeed*Math.PI/180,this.up),m(t,t,e),a(this.target,this.position,t),this.updateViewMatrix()}tiltRight(){const t=i();d(t,this.target,this.position),u(t,t);const e=f();x(e,-this.tiltSpeed*Math.PI/180,this.up),m(t,t,e),a(this.target,this.position,t),this.updateViewMatrix()}updateViewMatrix(){M(this.viewMatrix,this.position,this.target,this.up)}}class S{static getRandomTexture(){const t=Math.floor(Math.random()*this.availableTextures.length);return this.availableTextures[t]}static createTexture(t,e){return i=this,s=void 0,n=function*(){if(!e)return Promise.resolve(null);const i=t.createTexture();if(!i)throw new Error("Failed to create texture");return t.bindTexture(t.TEXTURE_2D,i),t.pixelStorei(t.UNPACK_FLIP_Y_WEBGL,!0),t.texImage2D(t.TEXTURE_2D,0,t.RGBA,1,1,0,t.RGBA,t.UNSIGNED_BYTE,new Uint8Array([64,64,64,255])),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_MAG_FILTER,t.LINEAR),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_MIN_FILTER,t.LINEAR_MIPMAP_LINEAR),t.generateMipmap(t.TEXTURE_2D),t.bindTexture(t.TEXTURE_2D,null),new Promise(((s,r)=>{const n=new Image;n.onload=()=>{t.bindTexture(t.TEXTURE_2D,i),t.texImage2D(t.TEXTURE_2D,0,t.RGBA,t.RGBA,t.UNSIGNED_BYTE,n),t.generateMipmap(t.TEXTURE_2D),t.bindTexture(t.TEXTURE_2D,null),s(i)},n.onerror=()=>{console.error("Unable to load texture "+e),r("Unable to load texture "+e)},n.crossOrigin="Anonymous",n.src=e}))},new((r=void 0)||(r=Promise))((function(t,e){function a(t){try{h(n.next(t))}catch(t){e(t)}}function o(t){try{h(n.throw(t))}catch(t){e(t)}}function h(e){var i;e.done?t(e.value):(i=e.value,i instanceof r?i:new r((function(t){t(i)}))).then(a,o)}h((n=n.apply(i,s||[])).next())}));var i,s,r,n}}S.availableTextures=["assets/jupiter.jpg","assets/mars.jpg","assets/moon.jpg","assets/saturn.jpg","assets/uranus.jpg","assets/venus.jpg"];class A{constructor(t,e,s,r,a,o){this.material={diffuse:t,specular:e,ambient:s,n:r,texturePath:o,alpha:a},this.vertices=new Float32Array,this.triangles=new Uint16Array,this.normals=new Float32Array,this.uvs=new Float32Array,this.xAxis=n(1,0,0),this.yAxis=n(0,1,0),this.center=i(),this.translation=i()}getModelMatrix(){const t=i(),e=f(),s=f(),r=i();var n,a,o,h,c,m,d,x,M,b;u(t,g(t,this.xAxis,this.yAxis)),n=e,a=this.xAxis[0],o=this.yAxis[0],h=t[0],c=this.xAxis[1],m=this.yAxis[1],d=t[1],x=this.xAxis[2],M=this.yAxis[2],b=t[2],n[0]=a,n[1]=o,n[2]=h,n[3]=0,n[4]=c,n[5]=m,n[6]=d,n[7]=0,n[8]=x,n[9]=M,n[10]=b,n[11]=0,n[12]=0,n[13]=0,n[14]=0,n[15]=1,l(r,this.center),p(e,e,v(s,r)),p(e,v(s,this.center),e);const S=f();return v(S,this.translation),p(S,S,e),S}setTranslation(t){this.translation=t}rotate(t,e){const i=f();x(i,e,t),m(this.xAxis,this.xAxis,i),m(this.yAxis,this.yAxis,i)}getTranslation(){return this.translation}getVertices(){return this.vertices}getTriangles(){return this.triangles}getNormals(){return this.normals}getUVs(){return this.uvs}getMaterial(){return this.material}setMaterial(t){this.material=t}}class y{constructor(t,e,i,s,r,n,a){this.drawable=e,this.vertexBuffer=i,this.triangleBuffer=s,this.normalBuffer=r,this.uvBuffer=n,this.texture=a}getModelMatrix(){return this.drawable.getModelMatrix()}setTranslation(t){this.drawable.setTranslation(t)}getTranslation(){return this.drawable.getTranslation()}getVertices(){return this.drawable.getVertices()}getTriangles(){return this.drawable.getTriangles()}getNormals(){return this.drawable.getNormals()}getUVs(){return this.drawable.getUVs()}getMaterial(){return this.drawable.getMaterial()}getVertexBuffer(){return this.vertexBuffer}getTriangleBuffer(){return this.triangleBuffer}getNormalBuffer(){return this.normalBuffer}getUVBuffer(){return this.uvBuffer}getTexture(){return this.texture}}class P extends A{constructor(t,e,i,s,r,n,a,o){super(i,s,r,n,a,o),this.generateSquare(t,e)}generateSquare(t,e){this.vertices=new Float32Array([t[0],t[1],t[2],t[0]+e,t[1],t[2],t[0]+e,t[1],t[2]+e,t[0],t[1],t[2]+e]),this.triangles=new Uint16Array([0,1,2,0,2,3]),this.normals=new Float32Array([0,1,0,0,1,0,0,1,0,0,1,0]),this.uvs=new Float32Array([0,0,1,0,1,1,0,1]);for(let t=0;t<this.vertices.length;t+=3)this.center[0]+=this.vertices[t],this.center[1]+=this.vertices[t+1],this.center[2]+=this.vertices[t+2];this.center[0]/=this.vertices.length/3,this.center[1]/=this.vertices.length/3,this.center[2]/=this.vertices.length/3}}class w extends A{constructor(t,e,i,s,r,n,a,o){super(i,s,r,n,a,o),this.generateSphere(t,e)}generateSphere(t,e,i=32){const s=1/Math.PI,r=2*Math.PI,n=1/r,a=.001*Math.PI,o=[t[0],t[1]-e,t[2]],h=[.5,0],c=r/i,l=c*(Math.floor(.25*i)-1);for(let i=-l;i<=l+a;i+=c){const l=Math.cos(i)*e,u=Math.sin(i)*e,g=i*s+.5;for(let e=0;e<=r+a;e+=c)o.push(-l*Math.sin(e)+t[0],u+t[1],l*Math.cos(e)+t[2]),h.push(e*n,g)}o.push(t[0],t[1]+e,t[2]),h.push(.5,1);const u=o.slice(),g=[],m=Math.floor(o.length/3);for(let t=1;t<=i;t++)g.push(0,t,t+1,m-1,m-t-1,m-t-2);let d;for(let t=0;t<i/2-2;t++)for(let e=0;e<i;e++)d=t*(i+1)+e+1,g.push(d,d+i+1,d+i+2,d,d+i+2,d+1);this.vertices=new Float32Array(o),this.normals=new Float32Array(u),this.uvs=new Float32Array(h),this.triangles=new Uint16Array(g),this.center=t}}class L extends A{constructor(t,e,i,s,r,n,a,o,h){super(s,r,n,a,o,h),this.generateModel(t,e,i)}generateModel(t,e,s){const{vertices:r,normals:n,uvs:o,triangles:h,center:l,bounds:u}=t,g=u.min,m=u.max,f=m[0]-g[0],p=m[1]-g[1],v=m[2]-g[2],x=e/Math.max(f,p,v),M=i();c(M,l,x),d(M,s,M);const b=new Float32Array(r.length);for(let t=0;t<r.length;t+=3)b[t]=r[t]*x+M[0],b[t+1]=r[t+1]*x+M[1],b[t+2]=r[t+2]*x+M[2];const S=i();c(S,l,x),a(S,S,M),this.vertices=b,this.normals=n,this.uvs=o,this.triangles=h,this.center=S}}const T=.2,E=n(1,1,1);class F{constructor(){this.settings={gravitationalCoefficient:.66743,maxSpeed:.001,windX:0,windZ:0,customModelData:void 0,particleColor:E,particleSize:T,randomSize:!0,randomColor:!0,particleCollisions:!1,totalParticles:25,yPlane:1,dropGravityWell:!1}}static getInstance(){return F.instance||(F.instance=new F),F.instance}getSettings(){return this.settings}}class R{constructor(t,e,s){this.settings=F.getInstance(),this.reverse=!1,this.minBounds=n(Number.MAX_VALUE,Number.MAX_VALUE,Number.MAX_VALUE),this.maxBounds=n(-Number.MAX_VALUE,-Number.MAX_VALUE,-Number.MAX_VALUE),this.isDead=!1,this.collided=!1,this.observers=[],this.radius=e,this.centerPoint=s;const r=l(i(),t),a=n(0,1,0);this.velocity=g(i(),r,a),Math.random()<.5&&(this.reverse=!0,l(this.velocity,this.velocity)),this.acceleration=n(0,0,0);const o=4/3*Math.PI*Math.pow(this.radius,3),h=Math.random();this.mass=o*h,this.lifeTime=1e3+1e4*Math.random()*this.getMass(),this.setupModel(t,e)}setupModel(t,e){const i=n(0,0,0),s=this.settings.getSettings().randomColor?n(Math.random(),Math.random(),Math.random()):this.settings.getSettings().particleColor,r=this.settings.getSettings().customModelData;if(r)this.model=new L(r,10*e,i,s,s,s,10,1,void 0);else{const t=S.getRandomTexture();this.model=new w(i,e,s,s,s,10,1,t)}this.model.setTranslation(t);const a=this.model.getVertices();for(let t=0;t<a.length;t+=3){const e=n(a[t],a[t+1],a[t+2]);o=this.minBounds,c=this.minBounds,l=e,o[0]=Math.min(c[0],l[0]),o[1]=Math.min(c[1],l[1]),o[2]=Math.min(c[2],l[2]),h(this.maxBounds,this.maxBounds,e)}var o,c,l}applyGravity(t){const e=t instanceof R,s=e?t.getPosition():t,n=o(i(),s,this.getPosition()),h=r(n);if(h<1)return;u(n,n);const l=e?t.getMass():10,g=this.settings.getSettings().gravitationalCoefficient*this.mass*l/(h*h),m=c(i(),n,g/this.mass);a(this.acceleration,this.acceleration,m)}addObserver(t){this.observers.push(t)}removeObserver(t){const e=this.observers.indexOf(t);e>-1&&this.observers.splice(e,1)}notifyObservers(){for(const t of this.observers)t.handleParticleDeath(this)}applyWind(){const t=n(this.settings.getSettings().windX,0,this.settings.getSettings().windZ);c(t,t,100),a(this.acceleration,this.acceleration,t)}update(t){if(this.isDead){const t=this.model.getMaterial(),e=t.alpha-.001;if(e<=0)return void this.notifyObservers();if(this.model.setMaterial(Object.assign(Object.assign({},t),{alpha:e})),this.collided)return}const e=o(i(),this.centerPoint,this.getPosition()),h=u(i(),e),m=g(i(),h,n(0,1,0));this.reverse&&l(m,m),u(m,m);const d=r(this.velocity),f=c(i(),m,d),p=o(i(),f,this.velocity);c(p,p,31250),a(this.velocity,this.velocity,p);const v=c(i(),this.acceleration,t);a(this.velocity,this.velocity,v);const x=this.settings.getSettings().maxSpeed;r(this.velocity)>x&&(u(this.velocity,this.velocity),c(this.velocity,this.velocity,x));const M=s(this.getPosition());a(M,M,c(i(),this.velocity,t));for(let t of[0,2])(M[t]<-10||M[t]>10)&&(M[t]=Math.max(-10,Math.min(10,M[t])),this.velocity[t]=0);var b;this.model.setTranslation(M),this.model.rotate(n(0,1,0),Math.PI/1e3*(this.reverse?-1:1)),(b=this.acceleration)[0]=0,b[1]=0,b[2]=0,this.lifeTime-=1,!this.isDead&&this.lifeTime<0&&this.kill()}getModel(){return this.model}getPosition(){return this.model.getTranslation()}getMass(){return this.mass}getBounds(){const t=this.model.getTranslation();return{min:a(i(),this.minBounds,t),max:a(i(),this.maxBounds,t)}}intersects(t){const e=t.getBounds(),i=this.getBounds(),s=Math.min(i.max[0],e.max[0])-Math.max(i.min[0],e.min[0]),r=Math.min(i.max[1],e.max[1])-Math.max(i.min[1],e.min[1]),n=Math.min(i.max[2],e.max[2])-Math.max(i.min[2],e.min[2]);return s>0&&r>0&&n>0}kill(t=!1){this.isDead=!0,this.collided=t}}class U extends R{constructor(t,e,i){super(t,e,i);const s=this.getModel(),r=n(0,0,0),a=n(.1,.1,.2),o=s.getMaterial();s.setMaterial(Object.assign(Object.assign({},o),{diffuse:r,specular:r,ambient:a,texturePath:void 0}))}update(t){}getMass(){return 1e3}}class B{constructor(t,e){this.lastAnimationTime=0,this.settings=F.getInstance(),this.observers=[],this.centerPoint=e,this.totalParticles=t,this.particles=this.generateParticles(t),this.animate(0)}animate(t){const e=t-this.lastAnimationTime;this.lastAnimationTime=t,this.update(e),this.animationFrameId=requestAnimationFrame(this.animate.bind(this))}addObserver(t){this.observers.push(t)}removeObserver(t){const e=this.observers.indexOf(t);e>-1&&this.observers.splice(e,1)}generateParticle(t){const e=Math.random()*Math.PI*2,i=t+2*(Math.random()-.5),s=this.centerPoint[0]+i*Math.cos(e),r=this.centerPoint[2]+i*Math.sin(e),a=n(s,this.centerPoint[1],r),o=this.settings.getSettings().randomSize?.4*Math.random()+.2:this.settings.getSettings().particleSize;return new R(a,o,this.centerPoint)}addParticle(t){this.particles.push(t),t.addObserver(this);for(const e of this.observers)e.addParticle(t)}generateParticles(t){const e=[];let i=0,s=3,r=1;for(;i<t;){const n=Math.min(6*r,t-i);for(let r=0;r<n&&i<t;r++)Math.random()<.1||(e.push(this.generateParticle(s)),i++);s+=.5*r,r++}return e}handleParticleDeath(t){const e=this.particles.indexOf(t);if(e>-1){this.particles.splice(e,1);const i=2,s=this.totalParticles/(1e3*Math.random())*3,r=this.generateParticle(i+s);r.addObserver(this),this.particles.push(r);for(const e of this.observers)e.removeParticle(t),e.addParticle(r)}}getParticles(){return this.particles}update(t){for(const t of this.particles){for(const e of this.particles)t!==e&&(this.settings.getSettings().particleCollisions&&t.intersects(e)&&(t.kill(!0),e.kill(!0)),t.applyGravity(e));t.applyGravity(this.centerPoint),t.applyWind()}for(const e of this.particles)e.update(t)}stop(){this.animationFrameId&&cancelAnimationFrame(this.animationFrameId)}}class C{constructor(t,e){this.objects=[],this.lights=[],this.camera=e,this.gl=t.getContext("webgl"),this.gl?(this.gl.viewport(0,0,t.width,t.height),this.gl.clearColor(0,0,0,1),this.gl.clearDepth(1),this.gl.enable(this.gl.DEPTH_TEST),this.gl.enable(this.gl.BLEND),this.gl.blendFunc(this.gl.SRC_ALPHA,this.gl.ONE_MINUS_SRC_ALPHA),this.setupShaders(),this.renderObjects()):console.error("WebGL not supported!")}addObject(t){return e=this,i=void 0,r=function*(){const e=yield function(t,e){return i=this,s=void 0,n=function*(){const i=t.createBuffer();t.bindBuffer(t.ARRAY_BUFFER,i),t.bufferData(t.ARRAY_BUFFER,e.getVertices(),t.STATIC_DRAW);const s=t.createBuffer();t.bindBuffer(t.ARRAY_BUFFER,s),t.bufferData(t.ARRAY_BUFFER,e.getNormals(),t.STATIC_DRAW);const r=t.createBuffer();t.bindBuffer(t.ARRAY_BUFFER,r),t.bufferData(t.ARRAY_BUFFER,e.getUVs(),t.STATIC_DRAW);const n=t.createBuffer();t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,n),t.bufferData(t.ELEMENT_ARRAY_BUFFER,e.getTriangles(),t.STATIC_DRAW);const a=e.getMaterial(),o=yield S.createTexture(t,a.texturePath);return new y(t,e,i,n,s,r,o)},new((r=void 0)||(r=Promise))((function(t,e){function a(t){try{h(n.next(t))}catch(t){e(t)}}function o(t){try{h(n.throw(t))}catch(t){e(t)}}function h(e){var i;e.done?t(e.value):(i=e.value,i instanceof r?i:new r((function(t){t(i)}))).then(a,o)}h((n=n.apply(i,s||[])).next())}));var i,s,r,n}(this.gl,t);this.objects.push(e)},new((s=void 0)||(s=Promise))((function(t,n){function a(t){try{h(r.next(t))}catch(t){n(t)}}function o(t){try{h(r.throw(t))}catch(t){n(t)}}function h(e){var i;e.done?t(e.value):(i=e.value,i instanceof s?i:new s((function(t){t(i)}))).then(a,o)}h((r=r.apply(e,i||[])).next())}));var e,i,s,r}addLight(t){this.lights.push(t),this.animationFrameId&&cancelAnimationFrame(this.animationFrameId),this.setupShaders(),this.renderObjects()}removeLight(t){const e=this.lights.findIndex((e=>e===t));e>-1&&(this.lights.splice(e,1),this.animationFrameId&&cancelAnimationFrame(this.animationFrameId),this.setupShaders(),this.renderObjects())}removeObject(t){const e=this.objects.findIndex((e=>t.getVertices().length==e.getVertices().length&&t.getVertices().every(((t,i)=>t==e.getVertices()[i]))));e>-1&&this.objects.splice(e,1)}addParticle(t){this.addObject(t.getModel())}removeParticle(t){this.removeObject(t.getModel())}setupShaders(){const t=Math.max(this.lights.length,1),e=`\n        precision mediump float;\n\n        uniform vec3 uLightPosition[${t}];\n        uniform vec3 uLightAmbient[${t}];\n        uniform vec3 uLightDiffuse[${t}];\n        uniform vec3 uLightSpecular[${t}];\n\n        uniform vec3 uCameraPosition;\n\n        uniform vec3 uAmbient;\n        uniform vec3 uDiffuse;\n        uniform vec3 uSpecular;\n        uniform float uShininess;\n        uniform float uAlpha;\n\n        uniform bool uUsingTexture;\n        uniform sampler2D uTexture;\n\n        varying vec2 vUV;\n        varying vec3 vPosition;\n        varying vec3 vNormal;\n\n        void main(void) {\n            vec3 normal = normalize(vNormal);\n            vec3 ambient = vec3(0, 0, 0);\n            vec3 diffuse = vec3(0, 0, 0);\n            vec3 specular = vec3(0, 0, 0);\n\n            for(int i = 0; i < ${t}; i++) {\n                vec3 lightDirection = normalize(uLightPosition[i] - vPosition);\n                float lambertian = max(dot(lightDirection, normal), 0.0);\n                vec3 viewDirection = normalize(uCameraPosition - vPosition);\n                vec3 halfVector = normalize(lightDirection + viewDirection);\n                float highlight = pow(max(dot(normal, halfVector), 0.0), uShininess);\n                ambient += uLightAmbient[i] * uAmbient;\n                diffuse += uLightDiffuse[i] * uDiffuse * lambertian;\n                specular += uLightSpecular[i] * uSpecular * highlight;\n            }\n\n            ambient /= float(${t});\n            diffuse /= float(${t});\n            specular /= float(${t});\n\n            vec3 lightColor = ambient + diffuse + specular;\n\n            if(!uUsingTexture) {\n                gl_FragColor = vec4(lightColor, uAlpha);\n            } else {\n                vec4 textureColor = texture2D(uTexture, vUV);\n                gl_FragColor = vec4(textureColor.rgb * lightColor, textureColor.a);\n            }\n        }\n      `,i=this.gl.createShader(this.gl.FRAGMENT_SHADER);if(!i)return void console.error("Error creating fragment shader");if(this.gl.shaderSource(i,e),this.gl.compileShader(i),!this.gl.getShaderParameter(i,this.gl.COMPILE_STATUS))return void console.error("ERROR compiling fragment shader:",this.gl.getShaderInfoLog(i));const s=this.gl.createShader(this.gl.VERTEX_SHADER);if(!s)return void console.error("Error creating vertex shader");if(this.gl.shaderSource(s,"\n        attribute vec3 aPosition;\n        attribute vec3 aNormal;\n        attribute vec2 aUV;\n        uniform mat4 uModelMatrix;\n        uniform mat4 uProjectionViewMatrix;\n\n        varying vec3  vPosition;\n        varying vec2 vUV;\n        varying vec3 vNormal;\n        \n        void main() {\n            vec4 vPosition4 = uModelMatrix * vec4(aPosition, 1.0);\n            vPosition = vPosition4.xyz;\n            gl_Position = uProjectionViewMatrix * vPosition4;\n\n            vec4 vNormal4 = uModelMatrix * vec4(aNormal, 0.0);\n            vNormal = normalize(vec3(vNormal4.x, vNormal4.y, vNormal4.z));\n\n            vUV = aUV;\n        }\n      "),this.gl.compileShader(s),!this.gl.getShaderParameter(s,this.gl.COMPILE_STATUS))return void console.error("ERROR compiling vertex shader:",this.gl.getShaderInfoLog(s));const r=this.gl.createProgram();this.gl.attachShader(r,i),this.gl.attachShader(r,s),this.gl.linkProgram(r),this.gl.getProgramParameter(r,this.gl.LINK_STATUS)?(this.gl.useProgram(r),this.aPositionLoc=this.gl.getAttribLocation(r,"aPosition"),this.gl.enableVertexAttribArray(this.aPositionLoc),this.aNormalLoc=this.gl.getAttribLocation(r,"aNormal"),this.gl.enableVertexAttribArray(this.aNormalLoc),this.aUVLoc=this.gl.getAttribLocation(r,"aUV"),this.gl.enableVertexAttribArray(this.aUVLoc),this.uModelMatrixLoc=this.gl.getUniformLocation(r,"uModelMatrix"),this.uProjectionViewMatrixLoc=this.gl.getUniformLocation(r,"uProjectionViewMatrix"),this.uCameraPositionLoc=this.gl.getUniformLocation(r,"uCameraPosition"),this.uAmbientLoc=this.gl.getUniformLocation(r,"uAmbient"),this.uDiffuseLoc=this.gl.getUniformLocation(r,"uDiffuse"),this.uSpecularLoc=this.gl.getUniformLocation(r,"uSpecular"),this.uShininessLoc=this.gl.getUniformLocation(r,"uShininess"),this.uAlphaLoc=this.gl.getUniformLocation(r,"uAlpha"),this.uUsingTextureLoc=this.gl.getUniformLocation(r,"uUsingTexture"),this.uTextureLoc=this.gl.getUniformLocation(r,"uTexture"),this.gl.uniform3fv(this.uCameraPositionLoc,this.camera.getPosition()),this.lights.forEach(((t,e)=>{this.gl.uniform3fv(this.gl.getUniformLocation(r,`uLightPosition[${e}]`),t.position),this.gl.uniform3fv(this.gl.getUniformLocation(r,`uLightAmbient[${e}]`),t.ambient),this.gl.uniform3fv(this.gl.getUniformLocation(r,`uLightDiffuse[${e}]`),t.diffuse),this.gl.uniform3fv(this.gl.getUniformLocation(r,`uLightSpecular[${e}]`),t.specular)}))):console.error("ERROR linking program:",this.gl.getProgramInfoLog(r))}renderObjects(){this.animationFrameId=requestAnimationFrame(this.renderObjects.bind(this));const t=this.camera.getProjectionMatrix(),e=this.camera.getViewMatrix(),i=p(f(),t,e);this.gl.uniform3fv(this.uCameraPositionLoc,this.camera.getPosition()),this.gl.uniformMatrix4fv(this.uProjectionViewMatrixLoc,!1,i),this.gl.clear(this.gl.COLOR_BUFFER_BIT|this.gl.DEPTH_BUFFER_BIT),this.uModelMatrixLoc&&this.uProjectionViewMatrixLoc&&this.uCameraPositionLoc&&this.uAmbientLoc&&this.uDiffuseLoc&&this.uSpecularLoc&&this.uShininessLoc&&this.uAlphaLoc&&this.uUsingTextureLoc&&this.uTextureLoc&&void 0!==this.aPositionLoc&&void 0!==this.aNormalLoc&&void 0!==this.aUVLoc?this.objects.forEach((t=>{this.gl.uniformMatrix4fv(this.uModelMatrixLoc,!1,t.getModelMatrix());const e=t.getMaterial();this.gl.uniform3fv(this.uAmbientLoc,e.ambient),this.gl.uniform3fv(this.uDiffuseLoc,e.diffuse),this.gl.uniform3fv(this.uSpecularLoc,e.specular),this.gl.uniform1f(this.uShininessLoc,e.n),this.gl.uniform1f(this.uAlphaLoc,e.alpha),this.gl.uniform1i(this.uUsingTextureLoc,e.texturePath?1:0),this.gl.activeTexture(this.gl.TEXTURE0),this.gl.bindTexture(this.gl.TEXTURE_2D,t.getTexture()),this.gl.uniform1i(this.uTextureLoc,0),this.gl.bindBuffer(this.gl.ARRAY_BUFFER,t.getVertexBuffer()),this.gl.vertexAttribPointer(this.aPositionLoc,3,this.gl.FLOAT,!1,0,0),this.gl.bindBuffer(this.gl.ARRAY_BUFFER,t.getNormalBuffer()),this.gl.vertexAttribPointer(this.aNormalLoc,3,this.gl.FLOAT,!1,0,0),this.gl.bindBuffer(this.gl.ARRAY_BUFFER,t.getUVBuffer()),this.gl.vertexAttribPointer(this.aUVLoc,2,this.gl.FLOAT,!1,0,0),this.gl.bindBuffer(this.gl.ELEMENT_ARRAY_BUFFER,t.getTriangleBuffer()),this.gl.drawElements(this.gl.TRIANGLES,t.getTriangles().length,this.gl.UNSIGNED_SHORT,0)})):console.error("Uniform and attribute locations not set")}destroy(){this.animationFrameId&&cancelAnimationFrame(this.animationFrameId)}}class I{static processObj(t){const e=t.split("\n"),s=[],r=[],o=[],h=[],l=[],u=[],g=[],m=new Map;let d=0,f=1/0,p=1/0,v=1/0,x=-1/0,M=-1/0,b=-1/0;e.forEach((t=>{const e=t.trim().split(/\s+/);switch(e[0]){case"v":const t=parseFloat(e[1]),i=parseFloat(e[2]),n=parseFloat(e[3]),a=-i;s.push([t,n,a]),f=Math.min(f,t),x=Math.max(x,t),p=Math.min(p,n),M=Math.max(M,n),v=Math.min(v,a),b=Math.max(b,a);break;case"vn":r.push([parseFloat(e[1]),parseFloat(e[3]),-parseFloat(e[2])]);break;case"vt":o.push([parseFloat(e[1]),parseFloat(e[2])])}})),e.forEach((t=>{const e=t.trim().split(/\s+/);if("f"===e[0]){const t=e.length-1;for(let i=1;i<=t-2;i++)[1,i+1,i+2].forEach((t=>{const i=e[t].split("/"),n=parseInt(i[0])-1,a=i[1]?parseInt(i[1])-1:-1,c=i[2]?parseInt(i[2])-1:-1,f=`${n}/${a}/${c}`;if(m.has(f))g.push(m.get(f));else{const t=s[n];h.push(...t),a>=0&&o[a]?u.push(...o[a]):u.push(0,0),c>=0&&r[c]?l.push(...r[c]):l.push(0,0,0),m.set(f,d),g.push(d),d++}}))}}));const S=i();for(let t=0;t<h.length;t+=3)a(S,S,n(h[t],h[t+1],h[t+2]));return c(S,S,1/(h.length/3)),{vertices:new Float32Array(h),normals:new Float32Array(l),uvs:new Float32Array(u),triangles:new Uint16Array(g),center:S,bounds:{min:n(f,p,v),max:n(x,M,b)}}}}class V{constructor(t){this.cameraPosition=t.getPosition(),this.projectionMatrix=t.getProjectionMatrix(),this.viewMatrix=t.getViewMatrix(),this.settings=F.getInstance()}computeClickIntersection(t){const{x:e,y:i}=this.getMouseNDC(t),s=this.getRayFromCamera(e,i);return this.intersectRayWithPlane(s.origin,s.direction,this.settings.getSettings().yPlane)}getMouseNDC(t){const e=t.target;if(!e)return{x:0,y:0};const i=e.getBoundingClientRect();return{x:(t.clientX-i.left)/i.width*2-1,y:-((t.clientY-i.top)/i.height*2-1)}}getRayFromCamera(t,e){const r=f();var a,h,c,l,g,d,v,x,M,b,S,A,y,P,w,L,T,E,F,R,U,B,C,I,V,_,D,k,O,j,N;p(r,this.projectionMatrix,this.viewMatrix),a=r,c=(h=r)[0],l=h[1],g=h[2],d=h[3],v=h[4],x=h[5],M=h[6],b=h[7],S=h[8],A=h[9],y=h[10],P=h[11],w=h[12],L=h[13],T=h[14],(N=(F=c*x-l*v)*(j=y*(E=h[15])-P*T)-(R=c*M-g*v)*(O=A*E-P*L)+(U=c*b-d*v)*(k=A*T-y*L)+(B=l*M-g*x)*(D=S*E-P*w)-(C=l*b-d*x)*(_=S*T-y*w)+(I=g*b-d*M)*(V=S*L-A*w))&&(N=1/N,a[0]=(x*j-M*O+b*k)*N,a[1]=(g*O-l*j-d*k)*N,a[2]=(L*I-T*C+E*B)*N,a[3]=(y*C-A*I-P*B)*N,a[4]=(M*D-v*j-b*_)*N,a[5]=(c*j-g*D+d*_)*N,a[6]=(T*U-w*I-E*R)*N,a[7]=(S*I-y*U+P*R)*N,a[8]=(v*O-x*D+b*V)*N,a[9]=(l*D-c*O-d*V)*N,a[10]=(w*C-L*U+E*F)*N,a[11]=(A*U-S*C-P*F)*N,a[12]=(x*_-v*k-M*V)*N,a[13]=(c*k-l*_+g*V)*N,a[14]=(L*R-w*B-T*F)*N,a[15]=(S*B-A*R+y*F)*N);const z=n(t,e,-1),X=n(t,e,1);m(z,z,r),m(X,X,r);const G=i();return o(G,X,z),u(G,G),{origin:s(this.cameraPosition),direction:G}}intersectRayWithPlane(t,e,s){if(Math.abs(e[1])<1e-6)return null;const r=(s-t[1])/e[1];if(r<0)return null;const n=i();return function(t,e,i,s){t[0]=e[0]+i[0]*s,t[1]=e[1]+i[1]*s,t[2]=e[2]+i[2]*s}(n,t,e,r),n}}class _{constructor(t,e,i){this.settings=F.getInstance(),this.camera=t,this.rayTracer=new V(t),this.resetSceneCallback=function(t){let e;return()=>{clearTimeout(e),e=window.setTimeout(t,100)}}(e),this.dropObjectCallback=i,this.initializeSliders(),this.initializeKeyControls(),this.initializeScrollHandler(),this.initializeObjUpload(),this.initializeColorPicker(),this.initializeButtons(),this.initializeCheckboxes(),this.initializeClickHandler()}initializeClickHandler(){const t=document.getElementById("canvas");t&&t.addEventListener("click",(t=>{if(this.settings.getSettings().dropGravityWell){const e=this.rayTracer.computeClickIntersection(t);if(e){const t=n(e[0],e[1],e[2]);this.dropObjectCallback(t)}}}))}initializeButtons(){this.setupButton("clearSizeBtn",(()=>{const t=document.getElementById("particleSizeSlider"),e=document.getElementById("particleSizeValue");t&&e&&(e.innerText=T.toString(),t.value=T.toString()),this.settings.getSettings().particleSize=T,this.settings.getSettings().randomSize||this.resetSceneCallback()})),this.setupButton("clearColorBtn",(()=>{const t=document.getElementById("particleColor");this.settings.getSettings().particleColor=E,t.value="#FFFFFF",this.settings.getSettings().randomColor||this.resetSceneCallback()}))}initializeCheckboxes(){this.setupCheckbox("randomSizeCheckbox",(t=>{this.settings.getSettings().randomSize=t,this.resetSceneCallback()})),this.setupCheckbox("randomColorCheckbox",(t=>{this.settings.getSettings().randomColor=t,this.resetSceneCallback()})),this.setupCheckbox("collisionsCheckbox",(t=>{this.settings.getSettings().particleCollisions=t,this.resetSceneCallback()})),this.setupCheckbox("gravityWellCheckbox",(t=>{this.settings.getSettings().dropGravityWell=t}))}initializeSliders(){this.setupSlider("gravitySlider","gravityValue",(t=>{const e=6.6743*Math.pow(10,t);return this.settings.getSettings().gravitationalCoefficient=e,e.toExponential(4)})),this.setupSlider("windXSlider","windXValue",(t=>(this.settings.getSettings().windX=t,t.toString()))),this.setupSlider("windZSlider","windZValue",(t=>(this.settings.getSettings().windZ=t,t.toString()))),this.setupSlider("maxSpeedSlider","maxSpeedValue",(t=>(this.settings.getSettings().maxSpeed=t,t.toString()))),this.setupSlider("particleSizeSlider","particleSizeValue",(t=>{const e=this.settings.getSettings().particleSize;this.settings.getSettings().particleSize=t;const i=this.settings.getSettings();return i.randomSize||e===i.particleSize||this.resetSceneCallback(),t.toString()})),this.setupSlider("totalParticlesSlider","totalParticlesValue",(t=>{const e=this.settings.getSettings().totalParticles;return this.settings.getSettings().totalParticles=t,e!==t&&this.resetSceneCallback(),t.toString()}))}setupSlider(t,e,i){const s=document.getElementById(t),r=document.getElementById(e);if(s&&r){const t=t=>{const e=i(t);r.innerText=e};s.onchange=e=>t(parseFloat(e.target.value)),s.onmousemove=e=>t(parseFloat(e.target.value)),t(parseFloat(s.value))}}setupButton(t,e){const i=document.getElementById(t);i&&i.addEventListener("click",e)}setupCheckbox(t,e){const i=document.getElementById(t);i&&i.addEventListener("change",(t=>e(t.target.checked)))}initializeKeyControls(){document.addEventListener("keydown",(t=>{switch(t.key){case"w":this.camera.moveForward();break;case"W":this.camera.tiltUp();break;case"s":this.camera.moveBackward();break;case"S":this.camera.tiltDown();break;case"a":this.camera.moveLeft();break;case"A":this.camera.tiltLeft();break;case"d":this.camera.moveRight();break;case"D":this.camera.tiltRight()}}))}initializeScrollHandler(){const t=document.getElementById("canvas");t&&t.addEventListener("wheel",(t=>{t.preventDefault();const e=t.deltaY,i=t.deltaX;t.ctrlKey?e>0?this.camera.moveBackward():e<0&&this.camera.moveForward():(e>0?this.camera.moveDown():e<0&&this.camera.moveUp(),i>0?this.camera.moveRight():i<0&&this.camera.moveLeft())}),{passive:!1})}initializeObjUpload(){const t=document.getElementById("objFileUpload");t&&t.addEventListener("change",(()=>{if(t.files&&t.files[0]){const e=t.files[0],i=new FileReader;i.onload=t=>{var e;const i=null===(e=t.target)||void 0===e?void 0:e.result;this.settings.getSettings().customModelData=I.processObj(i),this.resetSceneCallback()},i.readAsText(e)}else this.settings.getSettings().customModelData=void 0,this.resetSceneCallback()}))}initializeColorPicker(){const t=document.getElementById("particleColor");t&&t.addEventListener("input",(t=>{const e=t.target.value,i=parseInt(e.slice(1,3),16)/255,s=parseInt(e.slice(3,5),16)/255,r=parseInt(e.slice(5,7),16)/255;this.settings.getSettings().particleColor=n(i,s,r),this.settings.getSettings().randomColor||this.resetSceneCallback()}))}}new class{constructor(){this.settings=F.getInstance(),this.center=n(0,this.settings.getSettings().yPlane,0),this.camera=this.createCamera(),this.light1=this.createLight(this.center),this.light2=this.createLight(n(0,10,0)),this.canvas=document.getElementById("canvas"),this.scene=new C(this.canvas,this.camera),this.resetScene(),this.uiHandler=new _(this.camera,this.resetScene.bind(this),this.dropObject.bind(this))}createCamera(){return new b(n(-25,25,-25),n(0,0,0),n(0,1,0),Math.PI/4,1,.1,1e5)}createLight(t){return{position:t,diffuse:n(1,1,1),specular:n(1,1,1),ambient:n(1,1,1)}}createSun(){return new w(this.center,1,n(1,1,0),n(.1,.1,.1),n(.2,.2,.2),3,1,void 0)}createFloor(){return new P(n(-10,0,-10),20,n(.2,.2,.2),n(0,0,0),n(0,0,0),1,.4,void 0)}resetScene(){this.particleSystem&&(this.particleSystem.getParticles().forEach((t=>t.removeObserver(this.particleSystem))),this.particleSystem.removeObserver(this.scene),this.particleSystem.stop()),this.scene.destroy(),this.scene=new C(this.canvas,this.camera),this.scene.addLight(this.light1),this.scene.addLight(this.light2),this.scene.addObject(this.createFloor()),this.scene.addObject(this.createSun()),this.particleSystem=new B(this.settings.getSettings().totalParticles,this.center),this.particleSystem.getParticles().forEach((t=>{this.scene.addObject(t.getModel()),t.addObserver(this.particleSystem)})),this.particleSystem.addObserver(this.scene)}dropObject(t){var e;const i=new U(t,1,this.center);null===(e=this.particleSystem)||void 0===e||e.addParticle(i)}}})();